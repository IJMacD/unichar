{"version":3,"sources":["App/style.module.css","formats.js","output.jsx","UCDSearch.jsx","App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","raw","label","isValid","parse","value","String","codepoints","i","length","cp","codePointAt","push","fromCodePoint","fromCharCode","encoded","he","decode","encode","decimal","test","every","x","e","trim","replace","split","map","parseInt","codePoints","toString","join","hex","s","a","b","start","end","RangeError","Array","fill","p","escaped","this","rawList","re","item","match","out","pos","exec","index","substring","substr","flatten","codePoint","padStart","utf8","bytes","byteString","u","string","c","charCodeAt","binary","v","arr","concat","StringOutput","props","str","className","classes","onSelect","switchInput","onClick","el","document","createElement","body","appendChild","select","execCommand","removeChild","copyText","EncodedOutput","useNamedReferences","CodePoints","cpList","React","useState","ucd","setUCD","useEffect","then","default","codePointOutput","codePointList","Char","UTF8Bytes","Bytes","UTF8Binary","formats","BinaryBytes","isNaN","char","title","getName","Number","toUpperCase","labelName","byte","style","marginRight","binaryByte","bytePrefix","byteData","bString","UCDSearch","onChoose","setValue","fetchUCD","results","limit","found","reg","RegExp","characterNameList","name","includes","searchParts","searchUCD","type","onChange","target","placeholder","r","TITLE","App","state","getHash","format","setState","window","location","hash","ii","addEventListener","inputRef","focus","formatter","container","input","border","ref","insertCodePoint","inOutContainer","inputContainer","sectionHeader","inputList","Object","keys","key","classNames","inputChoice","ij","invalidInput","selectedInput","undefined","outputContainer","output","Component","decodeURIComponent","inputMatch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69cff582.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2xEoa\",\"input\":\"style_input__3cuwL\",\"inOutContainer\":\"style_inOutContainer__9cTJC\",\"inputContainer\":\"style_inputContainer__1tyxa\",\"outputContainer\":\"style_outputContainer__1i_DA\",\"inputList\":\"style_inputList__g9TtZ\",\"inputChoice\":\"style_inputChoice__a_abM\",\"selectedInput\":\"style_selectedInput__1Wqc8\",\"invalidInput\":\"style_invalidInput__2ERqI\",\"output\":\"style_output__2nInZ\",\"label\":\"style_label__1q7lj\",\"labelName\":\"style_labelName__2GXPC\",\"char\":\"style_char__3d4S7\",\"byte\":\"style_byte__1Otr3\",\"binaryByte\":\"style_binaryByte__2Q0TJ\",\"bytePrefix\":\"style_bytePrefix__1a1Oz\",\"byteData\":\"style_byteData__3RCep\",\"switchInput\":\"style_switchInput__2Eixz\",\"codePointList\":\"style_codePointList__vVxI2\"};","import u from 'utf8';\nimport he from 'he';\n\n/**\n * @typedef Format\n * @prop {string} label\n * @prop {(value: string) => boolean} isValid\n * @prop {(value: string) => number[]} parse\n * @prop {(...codePoints: number[]) => string} fromCodePoint\n */\n\n/** @type {Format} */\nexport const raw = {\n    label: \"Raw Characters\",\n    isValid: () => true,\n    parse (value) {\n        const raw = String(value);\n\n        const codepoints = [];\n\n        for (let i = 0; i < raw.length; i++) {\n            const cp = raw.codePointAt(i);\n            codepoints.push(cp);\n            if (cp > 0xffff) {\n                i++;\n            }\n        }\n\n        return codepoints;\n    },\n    fromCodePoint (...codePoints) {\n        return String.fromCharCode(...codePoints);\n    }\n};\n\n/** @type {Format} */\nexport const encoded = {\n    label: \"Encoded String\",\n    isValid: () => true,\n    parse (value) {\n        return raw.parse(he.decode(String(value)));\n    },\n    fromCodePoint (...codePoints) {\n        return he.encode(String.fromCodePoint(...codePoints));\n    }\n};\n\n/** @type {Format} */\nexport const decimal = {\n    label: \"Code Point List (Decimal)\",\n    isValid (value) {\n        if(!/^[\\d ]*$/.test(value)) {\n            return false;\n        }\n\n        try {\n            const codepoints = decimal.parse(value);\n            return codepoints.every(x => x >= 0 && x < 0x110000);\n        } catch (e) {\n            return false;\n        }\n    },\n    parse (value) {\n        const raw = String(value).trim().replace(/ +/g, \" \").split(\" \");\n\n        const codepoints = raw.map(x => parseInt(x, 10));\n\n        return codepoints;\n    },\n    fromCodePoint (...codePoints) {\n        return codePoints.map(cp => cp.toString(10)).join(\" \");\n    }\n};\n\n/** @type {Format} */\nexport const hex = {\n    label: \"Code Point List (Hexidecimal)\",\n    isValid (value) {\n        try {\n            const codepoints = hex.parse(value);\n            return codepoints.every(x => x >= 0 && x < 0x110000);\n        } catch (e) {\n            return false;\n        }\n    },\n    parse (value) {\n        const raw = String(value).trim().replace(/[,\\s]+/g, \" \");\n\n        const expanded = raw.replace(/([\\da-f]+)-([\\da-f]+)/gi, (s, a, b) => {\n            const start = parseInt(a, 16);\n            const end = parseInt(b, 16);\n\n            if (start >= end) {\n                throw RangeError(`Start must be less than end: ${start} < ${end}`);\n            }\n\n            return Array(end - start + 1).fill(0).map((x,i) => (i + start).toString(16)).join(\" \");\n        }).split(\" \");\n\n        const codepoints = expanded.map(p => p.replace(/^U\\+/, \"\")).map(x => parseInt(x, 16));\n\n        return codepoints;\n    },\n    fromCodePoint (...codePoints) {\n        return codePoints.map(cp => cp.toString(16)).join(\" \");\n    }\n};\n\n/** @type {Format} */\nexport const escaped = {\n    label: \"Escaped Text\",\n    isValid (value) {\n        try {\n            const codepoints = this.parse(value);\n            return codepoints.every(x => x >= 0 && x < 0x110000);\n        } catch (e) {\n            return false;\n        }\n    },\n    parse (value) {\n        /** @type {(string|string[]|number|number[])[]} */\n        let rawList = [value];\n\n        const regexes = [\n            /\\\\u{([0-9a-fA-F]+)}/g,\n            /\\\\u([0-9a-fA-F]{4})/g,\n            /\\\\U([0-9a-fA-F]{8})/g,\n        ];\n        for (const re of regexes) {\n            rawList = rawList.map(item => {\n                if (typeof item === \"string\") {\n                    const out = [];\n                    let match;\n                    let pos = 0;\n                    while (match = re.exec(item)) {\n                        if (match.index > pos) {\n                            out.push(item.substring(pos, match.index));\n                        }\n                        pos = match.index + match[0].length;\n                        out.push(parseInt(match[1], 16));\n                    }\n                    if (pos < item.length) out.push(item.substr(pos));\n                    return out;\n                }\n                return item;\n            });\n            rawList = flatten(rawList);\n        }\n\n        rawList = rawList.map(item => typeof item === \"string\" ? [...item].map(x => x.codePointAt(0)) : item);\n\n        const codepoints = flatten(rawList);\n\n        return codepoints;\n    },\n    fromCodePoint (...codePoints) {\n        // Todo: Escape only non-ascii?\n        return codePoints.map(codePoint =>\n            codePoint < 0xffff ? \"\\\\u\" + codePoint.toString(16).padStart(4, \"0\") : `\\\\u{${codePoint.toString(16)}}`\n        ).join(\" \");\n    }\n};\n\n/** @type {Format} */\nexport const utf8 = {\n    label: \"UTF-8 Bytes\",\n    isValid (value) {\n        value = value.replace(/\\\\x/g, \"\");\n        if (!/^[\\da-f ,]*$/i.test(value)) {\n            return false;\n        }\n\n        try {\n            const raw = String(value).replace(/[ ,]/g, \"\");\n            if (raw.length % 2) {\n                return false;\n            }\n\n            const bytes = [];\n\n            for (let i = 0; i < raw.length; i += 2) {\n                bytes.push(parseInt(raw.substr(i,2), 16));\n            }\n\n            const byteString = String.fromCharCode(...bytes);\n            u.decode(byteString);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    },\n    parse (value) {\n        const raw = String(value).replace(/\\\\x/g, \"\").replace(/ /g, \"\");\n        if (raw.length % 2) {\n            return [];\n        }\n\n        const bytes = [];\n\n        for (let i = 0; i < raw.length; i += 2) {\n            bytes.push(parseInt(raw.substr(i,2), 16));\n        }\n\n        const byteString = bytes.map(x => String.fromCharCode(x)).join(\"\");\n\n        try {\n            const string = u.decode(byteString);\n\n            const codepoints = [...string].map(x => x.codePointAt(0));\n\n            return codepoints;\n        } catch (e) {\n            return [];\n        }\n    },\n    fromCodePoint (codePoints) {\n        return [...u.encode(String.fromCodePoint(...codePoints))].map(c => c.charCodeAt(0).toString(16).padStart(2, \"0\")).join(\" \");\n    }\n};\n\n/** @type {Format} */\nexport const binary = {\n    label: \"UTF-8 (Binary)\",\n    isValid (value) {\n        if (/[^01 ]/.test(value)) {\n            return false;\n        }\n\n        const bytes = value.split(\" \").map(v => parseInt(v, 2));\n\n        const byteString = bytes.map(x => String.fromCharCode(x)).join(\"\");\n\n        try {\n            u.decode(byteString);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    },\n    parse (value) {\n        const bytes = value.trim().split(\" \").map(v => parseInt(v, 2));\n\n        const byteString = bytes.map(x => String.fromCharCode(x)).join(\"\");\n\n        try {\n            const string = u.decode(byteString);\n\n            const codepoints = [...string].map(x => x.codePointAt(0));\n\n            return codepoints;\n        } catch (e) {\n            return [];\n        }\n    },\n    fromCodePoint (...codePoints) {\n        return codePoints.map(cp => cp.toString(2).padStart(8, \"0\")).join(\" \");\n    }\n}\n\nconst flatten = arr => [].concat(...arr);","import React from 'react';\nimport utf8 from 'utf8';\nimport he from 'he';\nimport * as formats from './formats';\n\nimport classes from './App/style.module.css';\n\n/**\n * @param {string} string\n */\nfunction copyText (string) {\n  const el = document.createElement(\"textarea\");\n  el.value = string;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\n\n/**\n * @param {{ codepoints: number[]; onSelect: (text: string) => void; }} props\n */\nexport function StringOutput (props) {\n  const str = String.fromCodePoint(...props.codepoints);\n  return (\n    <div>\n      <p className={classes.label}>\n        String\n        { props.onSelect && <button className={classes.switchInput} onClick={() => props.onSelect(str)}>➔</button> }\n        <button className={classes.switchInput} onClick={() => copyText(str)}>📋</button>\n      </p>\n      { str }\n    </div>\n  );\n}\n\n/**\n * @param {{ codepoints: number[]; onSelect: (text: string) => void; }} props\n */\nexport function EncodedOutput (props) {\n  const str = he.encode(String.fromCodePoint(...props.codepoints), { useNamedReferences: true });\n  return (\n    <div>\n      <p className={classes.label}>\n        Encoded\n        { props.onSelect && <button className={classes.switchInput} onClick={() => props.onSelect(str)}>➔</button> }\n      </p>\n      { str }\n    </div>\n  );\n}\n\n/**\n * @param {{ codepoints: number[]; onSelect: (text: string) => void; }} props\n */\nexport function CodePoints (props) {\n  const cpList = props.codepoints.map(cp => `U+${cp.toString(16)}`).join(\" \");\n  const [ ucd, setUCD ] = React.useState(null);\n\n  React.useEffect(() => {\n    import('ijmacd.ucd').then(({ default: ucd }) => {\n      setUCD(ucd);\n    });\n  }, []);\n\n  return (\n    <div className={classes.codePointOutput}>\n      <p className={classes.label}>\n        Code Points ({props.codepoints.length})\n        { props.onSelect && <button className={classes.switchInput} onClick={() => props.onSelect(cpList)}>➔</button> }\n      </p>\n      <div className={classes.codePointList}>\n        {\n          props.codepoints.map((x,i) => <Char value={x} key={i} ucd={ucd} />)\n        }\n      </div>\n    </div>\n  );\n}\n\n/**\n * @param {{ codepoints: number[]; onSelect: (text: string) => void; }} props\n */\nexport function UTF8Bytes (props) {\n\n  const bytes = [...utf8.encode(String.fromCodePoint(...props.codepoints))].map(b => b.charCodeAt(0).toString(16).padStart(2,\"0\")).join(\" \");\n  const length = utf8.encode(String.fromCodePoint(...props.codepoints)).length;\n\n  return (\n    <div>\n      <p className={classes.label}>\n        UTF-8 ({length} {length === 1 ? \"byte\" : \"bytes\"})\n        { props.onSelect && <button className={classes.switchInput} onClick={() => props.onSelect(bytes)}>➔</button> }\n      </p>\n      {\n        props.codepoints.map((x,i) => <Bytes value={x} key={i} />)\n      }\n    </div>\n  );\n}\n\n/**\n * @param {{ codepoints: number[]; onSelect: (text: string) => void;  }} props\n */\nexport function UTF8Binary (props) {\n  return <div>\n    <div className={classes.label}>\n      UTF-8 Bits\n      { props.onSelect && <button className={classes.switchInput} onClick={() => props.onSelect(formats.binary.fromCodePoint(...props.codepoints))}>➔</button> }\n    </div>\n    {\n      props.codepoints.map((x,i) => <BinaryBytes value={x} key={i} />)\n    }\n  </div>\n}\n\n/**\n * @param {{ value: number; ucd: { getName: (char: string) => string; }; }} props\n */\nfunction Char (props) {\n  if(isNaN(props.value)) return null;\n\n  const char = String.fromCodePoint(props.value);\n  const title = props.ucd ? props.ucd.getName(char) : \"\";\n\n  return <div className={classes.char} title={title}>\n    <p>{char}</p>\n    <span className={classes.label}>U+{Number(props.value).toString(16).toUpperCase()}</span>\n    { props.ucd && <span className={classes.labelName}>{title}</span> }\n  </div>;\n}\n\n/**\n * @param {{ value: number; }} props\n */\nfunction Bytes (props) {\n  if(isNaN(props.value)) return null;\n\n  try {\n    const bytes = [...utf8.encode(String.fromCodePoint(props.value))].map(c => c.charCodeAt(0));\n\n    return <div className={classes.byte} style={{ marginRight: 4 }}>\n      {bytes.map((b, i) => <span key={i}>{b.toString(16).padStart(2,'0')}</span>)}\n    </div>;\n  } catch (e) {\n    return;\n  }\n}\n\n/**\n * @param {{ value: number; }} props\n */\nfunction BinaryBytes (props) {\n  if(isNaN(props.value)) return null;\n\n  try {\n    const bytes = [...utf8.encode(String.fromCodePoint(props.value))].map(c => c.charCodeAt(0));\n\n    return <div className={classes.byte + \" \" + classes.binaryByte} style={{ marginRight: 4 }}>\n      {bytes.map((b, i, a) => {\n        const bString = b.toString(2).padStart(8, '0');\n        let bytePrefix, byteData;\n        if (a.length === 1) {\n          bytePrefix = bString.substr(0, 1);\n          byteData = bString.substr(1);\n        } else {\n          if (i === 0) {\n            bytePrefix = bString.substr(0, a.length + 1);\n            byteData = bString.substr(a.length + 1);\n          } else  {\n            bytePrefix = bString.substr(0,2);\n            byteData = bString.substr(2);\n          }\n        }\n        return <span key={i}>\n          <span className={classes.bytePrefix}>{bytePrefix}</span>\n          <span className={classes.byteData}>{byteData}</span>\n        </span>;\n      })}\n    </div>\n  } catch (e) {\n    return;\n  }\n}","import { useState, useEffect } from 'react';\n\nimport \"./UCDSearch.css\";\n\nexport default function UCDSearch ({ onChoose }) {\n    const [ value, setValue ] = useState(\"\");\n    const [ ucd, setUCD ] = useState(null);\n\n    useEffect(() => {\n        if (value && !ucd) {\n            fetchUCD();\n        }\n    }, [ucd, value]);\n\n    const results = value.length >= 3 ? searchUCD(ucd, value) : [];\n\n    return (\n        <div className=\"UCDSearch\">\n            <input type=\"search\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Search\" />\n            <ul className=\"UCDSearch-list\">\n                { results.map(r => (\n                    <li key={r.codePoint} onClick={() => { setValue(\"\"); onChoose(r.codePoint); }}>{r.name} {String.fromCodePoint(r.codePoint)}</li>\n                )) }\n            </ul>\n        </div>\n    )\n\n    async function fetchUCD() {\n        let { default: ucd } = await import('ijmacd.ucd');\n\n        // prime unicode data\n        ucd.getName(\"a\");\n\n        setUCD(ucd);\n    }\n}\n\n/**\n *\n * @param {{ characterNameList: string[] }} ucd\n * @param {string} value\n * @param {number} limit\n */\nfunction searchUCD (ucd, value, limit=100) {\n    const out = [];\n    const found = [];\n\n    if (!ucd) {\n        return [];\n    }\n\n    try {\n        const reg = new RegExp(value, \"i\");\n\n        for (let i = 0; i < ucd.characterNameList.length && out.length < limit; i++) {\n            const name = ucd.characterNameList[i];\n            if (name && reg.test(name)) {\n                out.push({ codePoint: i, name });\n                found.push(i);\n            }\n        }\n    }\n    catch (e) {}\n\n    if (out.length < limit && value.includes(\" \")) {\n        const searchParts = value.toUpperCase().split(\" \");\n\n        for (let i = 0; i < ucd.characterNameList.length && out.length < limit; i++) {\n            const name = ucd.characterNameList[i];\n            if (name && searchParts.every(s => name.includes(s)) && !found.includes(i)) {\n                out.push({ codePoint: i, name });\n            }\n        }\n    }\n\n    return out;\n}","import React, { Component } from 'react';\n\nimport * as formats from '../formats';\nimport { StringOutput, CodePoints, UTF8Bytes, UTF8Binary, EncodedOutput } from '../output';\nimport UCDSearch from '../UCDSearch';\n\nimport classes from './style.module.css';\n\nconst TITLE = \"Unichar\";\n\nexport default class App extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = getHash();\n  }\n\n  onChange = (e) => {\n    this.setValue(e.target.value);\n  }\n\n  setValue (value, format=this.state.format) {\n    this.setState({ value, format }, () => {\n      window.location.hash = `${format}:${value}`;\n\n      const ii = formats[this.state.format]\n      if(ii.isValid(value)) {\n        document.title = `${TITLE} - ${String.fromCodePoint(...ii.parse(value))}`;\n      }\n    });\n  }\n\n  async componentDidMount () {\n    window.addEventListener(\"hashchange\", () => {\n      this.setState(getHash());\n    });\n\n    this.inputRef.focus();\n  }\n\n  /**\n   * @param {number} codePoint\n   */\n  insertCodePoint (codePoint) {\n    let { value, format }  = this.state;\n\n    const out = formats[format].fromCodePoint(codePoint);\n\n    if (format === \"raw\") {\n      value += out;\n    } else if (format === \"hex\") {\n      value += \" \" + out;\n    } else if (format === \"decimal\") {\n      value += \" \" + out;\n    } else if (format === \"utf8\") {\n      value += \" \" + out;\n    } else if (format === \"encoded\") {\n      value += out;\n    } else if (format === \"escaped\") {\n      value += out;\n    }\n\n    this.setValue(value);\n  }\n\n  render () {\n    const { value, format } = this.state;\n\n    if (!(format in formats)) {\n      return <p>Error: Bad input method chosen</p>;\n    }\n\n    /** @type {import('../formats').Format} */\n    const formatter = formats[format]\n\n    const isValid = formatter.isValid(value);\n\n    let codepoints = isValid ? formatter.parse(value) : [];\n\n    return (\n      <div className={classes.container}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={this.onChange}\n          className={classes.input}\n          style={{border: isValid ? \"\" : \"1px solid #f33\"}}\n          ref={ref => this.inputRef = ref}\n        />\n        <UCDSearch onChoose={cp => this.insertCodePoint(cp)} />\n        <div className={classes.inOutContainer}>\n          <div className={classes.inputContainer}>\n            <h2 className={classes.sectionHeader}>Input Interpretation</h2>\n            <ul className={classes.inputList}>\n              {\n                Object.keys(formats).map(key => {\n                  try {\n                    let classNames = classes.inputChoice;\n                    /** @type {import('../formats').Format} */\n                    const ij = formats[key];\n                    const isValid = ij.isValid(value);\n\n                    if (!isValid) {\n                      classNames += \" \" + classes.invalidInput;\n                    }\n\n                    if (key === format) {\n                      classNames += \" \" + classes.selectedInput;\n                    }\n\n                    return (\n                      <li\n                        key={key}\n                        className={classNames}\n                        onClick={isValid ? (() => this.setValue(value, key)) : undefined}\n                      >\n                        {ij.label}\n                        { isValid && <p>{String.fromCodePoint(...ij.parse(value))}</p> }\n                      </li>\n                    );\n                  } catch (e) {\n                    return \"Error decoding value\";\n                  }\n                })\n              }\n            </ul>\n          </div>\n          <div className={classes.outputContainer}>\n            <h2 className={classes.sectionHeader}>Code Points</h2>\n            { isValid &&\n              <CodePoints codepoints={codepoints} onSelect={format === \"hex\" ? null : (value) => this.setValue(value.toUpperCase(), \"hex\")} />\n            }\n          </div>\n          <div className={classes.outputContainer}>\n            <h2 className={classes.sectionHeader}>Output</h2>\n            { isValid &&\n              <ul className={classes.output}>\n                <li><StringOutput codepoints={codepoints} onSelect={format === \"raw\" ? null : (value) => this.setValue(value, \"raw\")} /></li>\n                <li><UTF8Bytes codepoints={codepoints} onSelect={format === \"utf8\" ? null : (value) => this.setValue(value, \"utf8\")} /></li>\n                <li><UTF8Binary codepoints={codepoints} onSelect={format === \"binary\" ? null : (value) => this.setValue(value, \"binary\")} /></li>\n                <li><EncodedOutput codepoints={codepoints} onSelect={format === \"encoded\" ? null : (value) => this.setValue(value, \"encoded\")} /></li>\n              </ul>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getHash () {\n  const { hash } = window.location;\n\n  if (!hash) {\n    return { value: \"\" };\n  }\n\n  const value = decodeURIComponent(hash.substr(1));\n\n  const inputMatch = /^([a-z0-9]+):/.exec(value);\n\n  if (inputMatch) {\n    return {\n      format: inputMatch[1],\n      value: value.substr(inputMatch[0].length),\n    };\n  } else {\n    return {\n      value,\n      format: \"raw\",\n    };\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}